<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd">

    <context:property-placeholder location="hikari.properties"/>
    <context:annotation-config/>
    <mybatis:scan base-package="com.seamew.mapper"/>

    <bean id="hikariDataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="jdbcUrl" value="${jdbcUrl}"/>
        <property name="username" value="${databaseUsername}"/>
        <property name="password" value="${password}"/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="hikariDataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="hikariDataSource"/>
        <!-- 指定 mybatis 基础配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 指定 mapper 配置文件 -->
        <property name="mapperLocations" value="classpath:mappers/**/*.xml"/>
    </bean>

    <!-- 逐个手动注入 mapper 太麻烦, 可以直接在 SqlSessionFactoryBean 当中指定 mapperLocations
         来让 mybatis 读取 mapper 配置文件, 并且这个属性支持 ant 风格通配符 -->
    <!--<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="mapperInterface" value="com.seamew.mapper.IUserMapper"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>-->

    <bean id="userService" class="com.seamew.service.impl.UserServiceImpl"/>

    <aop:config>
        <aop:pointcut id="atUserService" expression="execution(* com.seamew.service.IUserService+.*(..))"/>
        <aop:advisor advice-ref="defaultTxAdvice" pointcut-ref="atUserService"/>
    </aop:config>

    <tx:advice id="defaultTxAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

</beans>